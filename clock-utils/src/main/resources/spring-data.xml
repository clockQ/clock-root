<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/task  
        http://www.springframework.org/schema/task/spring-task-4.1.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        ">
	<!-- ******* 导入外部数据库的properties文件 ***** -->
	<context:property-placeholder location="classpath*:dev.common.properties" />

	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<!-- ******* 数据库配置信息 ****** -->
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="driverClass" value="${jdbc.dirver}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<!-- 其他配置 -->
		<property name="idleMaxAgeInMinutes" value="240" />
		<property name="idleConnectionTestPeriodInMinutes" value="60" />
		<property name="partitionCount" value="3" />
		<property name="acquireIncrement" value="10" />
		<property name="maxConnectionsPerPartition" value="6" />
		<property name="minConnectionsPerPartition" value="3" />
		<property name="statementsCacheSize" value="50" />
		<property name="releaseHelperThreads" value="3" />
	</bean>

	<!--配置实体管理对象 -->
	<bean id="entityManager"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 定义entity实体扫描路径 -->
		<property name="packagesToScan" value="org.clock.bs.entity" />
		<!-- jpaVendorAdapter 用于设置实现厂商JPA实现的特定属性,如设置Hibernate的是否自动生成DDL的属性generateDdl；这些属性是厂商特定的，因此最好在这里设置 -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="${hibernate.showSql}"/>
				<property name="generateDdl" value="${hibernate.generateDdl}"/>
				<property name="databasePlatform" value="${hibernate.databasePlatform}"/>
			</bean>
		</property>
		<!--指定JPA属性 如: Hibernate中指定是否显示SQL的 -->
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
				</prop>
				<prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
				<prop key="javax.persistence.sharedCache.mode">ENABLE_SELECTIVE</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<!-- 启用二级缓存,先关闭 -->
				<!-- <prop key="hibernate.cache.use_second_level_cache">true</prop> -->
				<!-- <prop key="net.sf.ehcache.configurationResourceName">hb-ehcache.xml</prop> -->
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.use_sql_comments">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
	</bean>

	<!--添加JPA事务管理器 -->
	<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManager" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="create*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="merge*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="remove*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="put*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="clear*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="copy*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />

			<!-- For Hibernate4, otherwise, session cannot found error occurs -->
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="count*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="list*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>
	
	<aop:aspectj-autoproxy expose-proxy="true"/>
	
	<aop:config expose-proxy="true">
        <aop:pointcut id="service" expression="execution(* org.clock..service..*.*(..)))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="service"/>
    </aop:config>
    
</beans>