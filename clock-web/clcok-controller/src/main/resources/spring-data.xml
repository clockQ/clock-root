<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/task  
        http://www.springframework.org/schema/task/spring-task-3.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        ">
	<!-- ******* 导入外部数据库的properties文件 ***** -->
	<context:property-placeholder location="classpath:local.common.properties" />

	<!-- 配置数据源 -->
    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<!-- ******* 数据库配置信息 ****** -->
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="driverClass" value="${jdbc.dirver}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<!-- 其他配置 -->
		<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="3"></property>
		<!--连接池中保留的最小连接数。Default: 3 -->
		<property name="minPoolSize" value="5"></property>
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="20"></property>
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="2"></property>
		<!-- 控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 
			0 -->
		<property name="maxStatements" value="8"></property>
		<!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->
		<property name="maxStatementsPerConnection" value="5"></property>
		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="1800"></property>
	</bean>
	
	<!--配置实体管理对象 -->
	<bean id="entityManager"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml" />
		<!-- 定义entity实体扫描路径 -->
		<property name="packagesToScan" value="org.clock.bs.entity" />
		<!-- jpaVendorAdapter 用于设置实现厂商JPA实现的特定属性,如设置Hibernate的是否自动生成DDL的属性generateDdl；这些属性是厂商特定的，因此最好在这里设置 -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="${hibernate.generateDdl}"></property>
				<property name="databasePlatform" value="${hibernate.databasePlatform}"></property>
			</bean>
		</property>
		<!--指定JPA属性 如: Hibernate中指定是否显示SQL的 -->
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.show_sql">${hibernate.showSql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop> 
				<prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
				<prop key="net.sf.ehcache.configurationResourceName">hb-ehcache.xml</prop> 
				<prop key="javax.persistence.sharedCache.mode">ENABLE_SELECTIVE</prop>  
				<prop key="hibernate.cache.use_query_cache">true</prop>  
				<prop key="hibernate.cache.use_second_level_cache">true</prop>  
				<prop key="hibernate.generate_statistics">true</prop>  
				<prop key="hibernate.use_sql_comments">true</prop>  
				<prop key="hibernate.format_sql">true</prop>  
			</props>
		</property>
	</bean>
	
	<!--添加JPA事务管理器 -->
	<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<property name="entityManagerFactory" ref="entityManager" />
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
	</bean>
	<!-- 开启事务注解支持，这样子，在类中添加@Transactional 才会起做作用 -->
	<tx:annotation-driven transaction-manager="txManager" />
</beans>